(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),c=t(667),d=t.n(c),s=new URL(t(283),t.b),l=i()(a()),A=d()(s);l.push([n.id,`* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    font-family: Arial, Helvetica, sans-serif;\n    background: url(${A}) no-repeat;\n    background-size: cover;\n}\n\n#content {\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 12% 1fr 7%;\n}\n\n.header-container {\n    background-color: white;\n    box-shadow: 0 5px 5px lightgray;\n    grid-row: 1;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    z-index: 1;\n\n    & h1 {\n        font-size: 2.5rem;\n    }\n\n    & ul {\n        list-style: none;\n        display: flex;\n        gap: 20px;\n\n        & li {\n            font-size: 1.5rem;\n        }\n    }\n}\n\n.main-container {\n    padding: 50px;\n    overflow: auto;\n    grid-row: 2;\n    display: grid;\n    justify-items: center;\n}\n\n.home-container {\n    width: 30%;\n    text-align: center;\n\n    & > :not(:last-child) {\n        margin-bottom: 20px;\n    }\n    \n    & > p {\n        font-size: 1.5rem;\n    }\n\n    & .time-table {\n        margin-top: 90px;\n\n        & h3 {\n            font-size: 1.5rem;\n        }\n\n        & p {\n            font-size: 1.2rem;\n        }\n\n        & :not(:last-child) {\n            margin-bottom: 20px;\n        }\n    }\n}\n\n.menu-container {\n    display: grid;\n    gap: 40px;\n    grid-template-columns: repeat(2, 1fr);\n    /* grid-auto-flow: column; */\n\n    & .menu-item-card {\n        display: grid;\n        justify-items: center;\n        \n        & :not(:last-child) {\n            margin-bottom: 10px;\n        }\n        \n        & img {\n            border: 5px double black;\n            border-radius: 5px;\n            width: 200px;\n            height: 200px;\n            object-fit: cover;\n        }\n    }\n}\n\n.contact-container {\n    text-align: center;\n\n    & h1 {\n        margin-bottom: 40px;\n    }\n\n    & :not(:first-child, :last-child) {\n        margin-bottom: 20px;\n    }\n}\n\n.footer-container {\n    font-size: 1.2rem;\n    background-color: white;\n    box-shadow: 0 -5px 5px lightgrey; \n    grid-row: 3;\n    display: grid;\n    place-items: center;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,yCAAyC;IACzC,6DAA4D;IAC5D,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,uBAAuB;IACvB,+BAA+B;IAC/B,WAAW;IACX,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,UAAU;;IAEV;QACI,iBAAiB;IACrB;;IAEA;QACI,gBAAgB;QAChB,aAAa;QACb,SAAS;;QAET;YACI,iBAAiB;QACrB;IACJ;AACJ;;AAEA;IACI,aAAa;IACb,cAAc;IACd,WAAW;IACX,aAAa;IACb,qBAAqB;AACzB;;AAEA;IACI,UAAU;IACV,kBAAkB;;IAElB;QACI,mBAAmB;IACvB;;IAEA;QACI,iBAAiB;IACrB;;IAEA;QACI,gBAAgB;;QAEhB;YACI,iBAAiB;QACrB;;QAEA;YACI,iBAAiB;QACrB;;QAEA;YACI,mBAAmB;QACvB;IACJ;AACJ;;AAEA;IACI,aAAa;IACb,SAAS;IACT,qCAAqC;IACrC,4BAA4B;;IAE5B;QACI,aAAa;QACb,qBAAqB;;QAErB;YACI,mBAAmB;QACvB;;QAEA;YACI,wBAAwB;YACxB,kBAAkB;YAClB,YAAY;YACZ,aAAa;YACb,iBAAiB;QACrB;IACJ;AACJ;;AAEA;IACI,kBAAkB;;IAElB;QACI,mBAAmB;IACvB;;IAEA;QACI,mBAAmB;IACvB;AACJ;;AAEA;IACI,iBAAiB;IACjB,uBAAuB;IACvB,gCAAgC;IAChC,WAAW;IACX,aAAa;IACb,mBAAmB;AACvB",sourcesContent:['* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    font-family: Arial, Helvetica, sans-serif;\n    background: url("./images/cupcake-background.jpg") no-repeat;\n    background-size: cover;\n}\n\n#content {\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 12% 1fr 7%;\n}\n\n.header-container {\n    background-color: white;\n    box-shadow: 0 5px 5px lightgray;\n    grid-row: 1;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    z-index: 1;\n\n    & h1 {\n        font-size: 2.5rem;\n    }\n\n    & ul {\n        list-style: none;\n        display: flex;\n        gap: 20px;\n\n        & li {\n            font-size: 1.5rem;\n        }\n    }\n}\n\n.main-container {\n    padding: 50px;\n    overflow: auto;\n    grid-row: 2;\n    display: grid;\n    justify-items: center;\n}\n\n.home-container {\n    width: 30%;\n    text-align: center;\n\n    & > :not(:last-child) {\n        margin-bottom: 20px;\n    }\n    \n    & > p {\n        font-size: 1.5rem;\n    }\n\n    & .time-table {\n        margin-top: 90px;\n\n        & h3 {\n            font-size: 1.5rem;\n        }\n\n        & p {\n            font-size: 1.2rem;\n        }\n\n        & :not(:last-child) {\n            margin-bottom: 20px;\n        }\n    }\n}\n\n.menu-container {\n    display: grid;\n    gap: 40px;\n    grid-template-columns: repeat(2, 1fr);\n    /* grid-auto-flow: column; */\n\n    & .menu-item-card {\n        display: grid;\n        justify-items: center;\n        \n        & :not(:last-child) {\n            margin-bottom: 10px;\n        }\n        \n        & img {\n            border: 5px double black;\n            border-radius: 5px;\n            width: 200px;\n            height: 200px;\n            object-fit: cover;\n        }\n    }\n}\n\n.contact-container {\n    text-align: center;\n\n    & h1 {\n        margin-bottom: 40px;\n    }\n\n    & :not(:first-child, :last-child) {\n        margin-bottom: 20px;\n    }\n}\n\n.footer-container {\n    font-size: 1.2rem;\n    background-color: white;\n    box-shadow: 0 -5px 5px lightgrey; \n    grid-row: 3;\n    display: grid;\n    place-items: center;\n}'],sourceRoot:""}]);const p=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],c=0;c<n.length;c++){var d=n[c],s=r.base?d[0]+r.base:d[0],l=o[s]||0,A="".concat(s," ").concat(l);o[s]=l+1;var p=t(A),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,r);r.byIndex=c,e.splice(c,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=t(o[i]);e[c].references--}for(var d=r(n,a),s=0;s<o.length;s++){var l=t(o[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},283:(n,e,t)=>{n.exports=t.p+"a463d52c60ea6ffccb08.jpg"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&!n;)n=r[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{function n(){const n=document.createElement("div"),e=document.createElement("h1"),t=document.createElement("p"),r=document.createElement("div"),a=document.createElement("h3"),o=document.createElement("p"),i=document.createElement("p");return n.classList.add("home-container"),r.classList.add("time-table"),e.textContent="Welcome to The Cup Cakes",t.textContent="Our shop is the perfect place to                                     for you to grab delicious Cup Cakes.                                    Come visit us or order online",a.textContent="Opening hours",o.textContent="Week-days: 8am - 8pm",i.textContent="Weekend: 8am - 6pm",r.appendChild(a,o,i),r.appendChild(o),r.appendChild(i),n.appendChild(e),n.appendChild(t),n.appendChild(r),n}const e=t.p+"79d2c971b33aae5de4a4.jpg",r=t.p+"acd637f6595cc4c06ef9.jpg",a=t.p+"891246ec11d5ef149e91.jpg",o=t.p+"fab23d08d57fa80080ed.jpg";var i=t(379),c=t.n(i),d=t(795),s=t.n(d),l=t(569),A=t.n(l),p=t(565),u=t.n(p),m=t(216),C=t.n(m),h=t(589),f=t.n(h),g=t(426),v={};v.styleTagTransform=f(),v.setAttributes=u(),v.insert=A().bind(null,"head"),v.domAPI=s(),v.insertStyleElement=C(),c()(g.Z,v),g.Z&&g.Z.locals&&g.Z.locals,function(){const t=document.querySelector("#content");t.appendChild(function(){const n=document.createElement("div"),e=document.createElement("h1"),t=document.createElement("ul"),r=document.createElement("li"),a=document.createElement("li"),o=document.createElement("li");return n.classList.add("header-container"),e.textContent="The Cup Cakes",r.textContent="Home",a.textContent="Menu",o.textContent="Contact",r.classList.add("header-nav-home"),a.classList.add("header-nav-menu"),o.classList.add("header-nav-contact"),t.appendChild(r),t.appendChild(a),t.appendChild(o),n.appendChild(e),n.appendChild(t),n}()),t.appendChild(function(n){const e=document.createElement("div");return e.classList.add("main-container"),e.appendChild(n),e}(n())),t.appendChild(function(){const n=document.createElement("div"),e=document.createElement("p");return n.classList.add("footer-container"),e.textContent="© 2023 VMadhuranga",n.appendChild(e),n}()),function(){const t=document.querySelector(".main-container"),i=document.querySelector(".header-nav-home"),c=document.querySelector(".header-nav-menu"),d=document.querySelector(".header-nav-contact");i.addEventListener("click",(function(){t.replaceChild(n(),t.lastChild)})),c.addEventListener("click",(function(){t.replaceChild(function(){const n=document.createElement("div");n.classList.add("menu-container");let t=[r,e,a,o],i=["Chocolate","Vanilla","Red velvet","Blue berry"],c=["$5","$6","$10","$10"];for(let e=0;e<i.length;e++){const r=document.createElement("div"),a=new Image,o=document.createElement("h3"),d=document.createElement("p");r.classList.add("menu-item-card"),a.src=t[e],a.alt=i[e],o.textContent=i[e],d.textContent=c[e],r.appendChild(a),r.appendChild(o),r.appendChild(d),n.appendChild(r)}return n}(),t.lastChild)})),d.addEventListener("click",(function(){t.replaceChild(function(){const n=document.createElement("div"),e=document.createElement("h1"),t=document.createElement("p"),r=document.createElement("p"),a=document.createElement("p");return n.classList.add("contact-container"),e.textContent="Contact Us",t.textContent="Phone: +94 (123) 123-1234",r.textContent="Email: fakecupcakes@example.com",a.textContent="Address: 123 Any street, Any town, SL",n.appendChild(e),n.appendChild(t),n.appendChild(r),n.appendChild(a),n}(),t.lastChild)}))}()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,